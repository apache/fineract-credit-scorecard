/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Fineract Credit Scorecard
 * An API module for credit risk assessment
 *
 * The version of the OpenAPI document: 0.1.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.fineract.credit.scorecard.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * PredictionRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PredictionRequest {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INPUT = "input";
  @SerializedName(SERIALIZED_NAME_INPUT)
  private java.util.Map<String, Object> input = new java.util.HashMap<>();

  public static final String SERIALIZED_NAME_RESPONSE = "response";
  @SerializedName(SERIALIZED_NAME_RESPONSE)
  private java.util.Map<String, Object> response = new java.util.HashMap<>();

  public static final String SERIALIZED_NAME_PREDICTION = "prediction";
  @SerializedName(SERIALIZED_NAME_PREDICTION)
  private String prediction;

  public static final String SERIALIZED_NAME_FEEDBACK = "feedback";
  @SerializedName(SERIALIZED_NAME_FEEDBACK)
  private String feedback;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_ALGORITHM = "algorithm";
  @SerializedName(SERIALIZED_NAME_ALGORITHM)
  private Integer algorithm;


   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getId() {
    return id;
  }




  public PredictionRequest input(java.util.Map<String, Object> input) {
    
    this.input = input;
    return this;
  }

  public PredictionRequest putInputItem(String key, Object inputItem) {
    this.input.put(key, inputItem);
    return this;
  }

   /**
   * Get input
   * @return input
  **/
  @ApiModelProperty(required = true, value = "")

  public java.util.Map<String, Object> getInput() {
    return input;
  }


  public void setInput(java.util.Map<String, Object> input) {
    this.input = input;
  }


  public PredictionRequest response(java.util.Map<String, Object> response) {
    
    this.response = response;
    return this;
  }

  public PredictionRequest putResponseItem(String key, Object responseItem) {
    this.response.put(key, responseItem);
    return this;
  }

   /**
   * Get response
   * @return response
  **/
  @ApiModelProperty(required = true, value = "")

  public java.util.Map<String, Object> getResponse() {
    return response;
  }


  public void setResponse(java.util.Map<String, Object> response) {
    this.response = response;
  }


  public PredictionRequest prediction(String prediction) {
    
    this.prediction = prediction;
    return this;
  }

   /**
   * Get prediction
   * @return prediction
  **/
  @ApiModelProperty(required = true, value = "")

  public String getPrediction() {
    return prediction;
  }


  public void setPrediction(String prediction) {
    this.prediction = prediction;
  }


  public PredictionRequest feedback(String feedback) {
    
    this.feedback = feedback;
    return this;
  }

   /**
   * Get feedback
   * @return feedback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFeedback() {
    return feedback;
  }


  public void setFeedback(String feedback) {
    this.feedback = feedback;
  }


  public PredictionRequest notes(String notes) {
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    this.notes = notes;
  }


   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




  public PredictionRequest createdBy(String createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(required = true, value = "")

  public String getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public PredictionRequest algorithm(Integer algorithm) {
    
    this.algorithm = algorithm;
    return this;
  }

   /**
   * Get algorithm
   * @return algorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAlgorithm() {
    return algorithm;
  }


  public void setAlgorithm(Integer algorithm) {
    this.algorithm = algorithm;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PredictionRequest predictionRequest = (PredictionRequest) o;
    return Objects.equals(this.id, predictionRequest.id) &&
        Objects.equals(this.input, predictionRequest.input) &&
        Objects.equals(this.response, predictionRequest.response) &&
        Objects.equals(this.prediction, predictionRequest.prediction) &&
        Objects.equals(this.feedback, predictionRequest.feedback) &&
        Objects.equals(this.notes, predictionRequest.notes) &&
        Objects.equals(this.createdAt, predictionRequest.createdAt) &&
        Objects.equals(this.createdBy, predictionRequest.createdBy) &&
        Objects.equals(this.algorithm, predictionRequest.algorithm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, input, response, prediction, feedback, notes, createdAt, createdBy, algorithm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PredictionRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    prediction: ").append(toIndentedString(prediction)).append("\n");
    sb.append("    feedback: ").append(toIndentedString(feedback)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    algorithm: ").append(toIndentedString(algorithm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

